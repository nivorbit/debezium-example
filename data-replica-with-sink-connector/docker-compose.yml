---
version: '3.8'
name: 'data-replica-with-sink-connector'
services:
  source_db:
    image: postgres
    restart: always
    container_name: source_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customer
    command: ['postgres', '-c', 'wal_level=logical']
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/data.sql
  target_db:
    image: postgres
    restart: always
    container_name: target_db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user
    command: [ 'postgres', '-c', 'wal_level=logical' ]
  broker:
    image: confluentinc/cp-kafka:7.5.3
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
  source-connect:
    image: quay.io/debezium/connect:2.5
    hostname: source-connect
    container_name: source-connect
    depends_on:
      - broker
      - source_db
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: source-connect
      GROUP_ID: debezium-source-connect-group
      CONFIG_STORAGE_TOPIC: debezium-source-connect-configs
      OFFSET_STORAGE_TOPIC: debezium-source-connect-offsets
      STATUS_STORAGE_TOPIC: debezium-source-connect-status
  target-connect:
    image: quay.io/debezium/connect:2.5
    hostname: target-connect
    container_name: target-connect
    depends_on:
      - broker
      - target_db
    ports:
      - "8084:8083"
    environment:
      BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: target-connect
      GROUP_ID: debezium-target-connect-group
      CONFIG_STORAGE_TOPIC: debezium-target-connect-configs
      OFFSET_STORAGE_TOPIC: debezium-target-connect-offsets
      STATUS_STORAGE_TOPIC: debezium-target-connect-status
    volumes:
      - $PWD/confluentinc-kafka-connect-jdbc-10.7.4:/kafka/connect/confluentinc-kafka-connect-jdbc-10.7.4
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.3
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - source-connect
      - target-connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

